package my.package.client.elements;

import com.google.gwt.xml.client.Node;
import java.util.ArrayList;
import java.util.List;
import com.codenvy.editor.api.editor.elements.AbstractShape;
import com.google.gwt.xml.client.NodeList;
import com.codenvy.editor.api.editor.elements.Shape;

public class MainElement extends AbstractShape {

    public MainElement(String name, List<String> properties) {
        super(name, properties);
    }

    public MainElement() {
        this("MainElement", new ArrayList<String>());

        components.add("Element1");
        components.add("Element2");
    }

    @Override
    public void deserialize(Node node) {
        NodeList childNodes = node.getChildNodes();

        for (int i = 0; i < childNodes.getLength(); i++) {
            Node item = childNodes.item(i);
            String name = item.getNodeName();

            if (isProperty(name)) {
                applyProperty(item);
            } else {
                Shape shape = findElement(name);
                shape.deserialize(item);
                addShape(shape);
            }
        }
    }

    private Shape findElement(String elementName) {
        switch (elementName) {
            case "Element1":
                return new Element1();
            case "Element2":
            default:
                return new Element2();
        }
    }

    @Override
    protected String serializeProperties() {
        return "";
    }

    @Override
    public void applyProperty(Node node) {
    }

}