package my.package.client.elements;

import com.google.gwt.xml.client.Node;
import javax.annotation.Nonnull;
import java.util.Arrays;

public class Element1 extends MainElement {
    private Integer property1;
    private Boolean property2;
    private String property3;
    private Double property4;
    private String property5;

    public Element1() {
        super("element1", Arrays.asList("Property1", "Property2", "Property3", "Property4", "Property5"), Arrays.asList("x", "y", "uuid", "autoAlign", "Property1", "Property2", "Property3", "Property4", "Property5"));

        property1 = 10;
        property2 = true;
        property3 = "some string";
        property4 = 12.3f;
        property5 = "pr1";
        components.add("Element2");
        targetElements.put("Connection1", Arrays.asList("Element1", "Element2"));
    }

    public Integer getProperty1() {
        return property1;
    }

    public void setProperty1(Integer property1) {
        this.property1 = property1;
    }

    public Boolean getProperty2() {
        return property2;
    }

    public void setProperty2(Boolean property2) {
        this.property2 = property2;
    }

    public String getProperty3() {
        return property3;
    }

    public void setProperty3(String property3) {
        this.property3 = property3;
    }

    public Double getProperty4() {
        return property4;
    }

    public void setProperty4(Double property4) {
        this.property4 = property4;
    }

    public String getProperty5() {
        return property5;
    }

    public void setProperty5(String property5) {
        this.property5 = property5;
    }

    @Override
    protected String serializeProperties() {
        return "property1=" +"\"" + property1 +"\"" + " " +
               "property2=" +"\"" + property2 +"\"" + " " +
               "property3=" +"\"" + property3 +"\"" + " " +
               "property4=" +"\"" + property4 +"\"" + " " +
               "property5=" +"\"" + property5 +"\"" + " ";
    }

    @Override
    public void applyProperty(Node node) {
        String nodeName = node.getNodeName();
        String nodeValue = node.getChildNodes().item(0).getNodeValue();

        switch (nodeName) {
            case "x":
                setX(Integer.valueOf(nodeValue));
            break;
            case "y":
                setY(Integer.valueOf(nodeValue));
            break;
            case "uuid":
                id = nodeValue;
            break;
            case "autoAlign":
                setAutoAlignmentParam(Boolean.valueOf(nodeValue));
            break;
            case "Property1":
                property1 = Integer.valueOf(nodeValue);
            break;
            case "Property2":
                property2 = Boolean.valueOf(nodeValue);
            break;
            case "Property3":
                property3 = String.valueOf(nodeValue);
            break;
            case "Property4":
                property4 = Double.valueOf(nodeValue);
            break;
            case "Property5":
                property5 = String.valueOf(nodeValue);
            break;
        }
    }

}